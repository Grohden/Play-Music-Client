  
UserProfileContract = (function () {
  var cls = function UserProfileContract() {
    };
  return cls;
}) ();
exports.UserProfileContract = UserProfileContract;


  
UserProfileLockScreenContract = (function () {
  var cls = function UserProfileLockScreenContract() {
    };
  return cls;
}) ();
exports.UserProfileLockScreenContract = UserProfileLockScreenContract;


_AccountPictureKind = function () {
  this.smallImage = 0;
  this.largeImage = 1;
  this.video = 2;
}
exports.AccountPictureKind = new _AccountPictureKind();

_SetAccountPictureResult = function () {
  this.success = 0;
  this.changeDisabled = 1;
  this.largeOrDynamicError = 2;
  this.videoFrameSizeError = 3;
  this.fileSizeError = 4;
  this.failure = 5;
}
exports.SetAccountPictureResult = new _SetAccountPictureResult();

_SetImageFeedResult = function () {
  this.success = 0;
  this.changeDisabled = 1;
  this.userCanceled = 2;
}
exports.SetImageFeedResult = new _SetImageFeedResult();

AdvertisingManagerForUser = (function () {
  var cls = function AdvertisingManagerForUser() {
    this.advertisingId = new String();
    this.user = new Object();
  };
  

  return cls;
}) ();
exports.AdvertisingManagerForUser = AdvertisingManagerForUser;

AdvertisingManager = (function () {
  var cls = function AdvertisingManager() {
  };
  

  cls.getForUser = function getForUser(user) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="user" type="Object">A param.</param>
    /// <returns type="AdvertisingManagerForUser" />
    /// </signature>
    return new AdvertisingManagerForUser();
  }


  cls.advertisingId = new String();
  return cls;
}) ();
exports.AdvertisingManager = AdvertisingManager;

UserProfilePersonalizationSettings = (function () {
  var cls = function UserProfilePersonalizationSettings() {
  };
  

  cls.prototype.trySetLockScreenImageAsync = function trySetLockScreenImageAsync(imageFile, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="imageFile" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.trySetWallpaperImageAsync = function trySetWallpaperImageAsync(imageFile, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="imageFile" type="Object">A param.</param>
    /// </signature>
  }


  cls.isSupported = function isSupported() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="Boolean" />
    /// </signature>
    return new Boolean();
  }


  cls.current = new UserProfilePersonalizationSettings();
  return cls;
}) ();
exports.UserProfilePersonalizationSettings = UserProfilePersonalizationSettings;

GlobalizationPreferences = (function () {
  var cls = function GlobalizationPreferences() {
  };
  

  cls.calendars = new Object();
  cls.clocks = new Object();
  cls.currencies = new Object();
  cls.homeGeographicRegion = new String();
  cls.languages = new Object();
  cls.weekStartsOn = new Number();
  return cls;
}) ();
exports.GlobalizationPreferences = GlobalizationPreferences;

FirstSignInSettings = (function () {
  var cls = function FirstSignInSettings() {
  };
  

  cls.prototype.lookup = function lookup(key) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="key" type="String">A param.</param>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.prototype.hasKey = function hasKey(key) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="key" type="String">A param.</param>
    /// <returns type="Boolean" />
    /// </signature>
    return new Boolean();
  }


  cls.prototype.split = function split(first, second) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="first" type="Object">A param.</param>
    /// <param name="second" type="Object">A param.</param>
    /// </signature>
  }


  cls.prototype.first = function first() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.getDefault = function getDefault() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="FirstSignInSettings" />
    /// </signature>
    return new FirstSignInSettings();
  }


  return cls;
}) ();
exports.FirstSignInSettings = FirstSignInSettings;

UserInformation = (function () {
  var cls = function UserInformation() {
  };
  

  cls.setAccountPictureAsync = function setAccountPictureAsync(image, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="image" type="Object">A param.</param>
    /// </signature>
  }



  cls.setAccountPicturesAsync = function setAccountPicturesAsync(smallImage, largeImage, video, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="smallImage" type="Object">A param.</param>
    /// <param name="largeImage" type="Object">A param.</param>
    /// <param name="video" type="Object">A param.</param>
    /// </signature>
  }



  cls.setAccountPictureFromStreamAsync = function setAccountPictureFromStreamAsync(image, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="image" type="Object">A param.</param>
    /// </signature>
  }



  cls.setAccountPicturesFromStreamsAsync = function setAccountPicturesFromStreamsAsync(smallImage, largeImage, video, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="smallImage" type="Object">A param.</param>
    /// <param name="largeImage" type="Object">A param.</param>
    /// <param name="video" type="Object">A param.</param>
    /// </signature>
  }



  cls.getDisplayNameAsync = function getDisplayNameAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getFirstNameAsync = function getFirstNameAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getLastNameAsync = function getLastNameAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getPrincipalNameAsync = function getPrincipalNameAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getSessionInitiationProtocolUriAsync = function getSessionInitiationProtocolUriAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getDomainNameAsync = function getDomainNameAsync(callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// </signature>
  }



  cls.getAccountPicture = function getAccountPicture(kind) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="kind" type="AccountPictureKind">A param.</param>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.accountPictureChangeEnabled = new Boolean();
  cls.nameAccessAllowed = new Boolean();
    cls.prototype.addListener = function addListener(eventName, callback){}
    cls.prototype.removeListener = function removeListener(eventName, callback){}
    cls.prototype.on = function on(eventName, callback){}
    cls.prototype.off = function off(eventName, callback){}
  return cls;
}) ();
exports.UserInformation = UserInformation;

LockScreen = (function () {
  var cls = function LockScreen() {
  };
  

  cls.requestSetImageFeedAsync = function requestSetImageFeedAsync(syndicationFeedUri, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="syndicationFeedUri" type="Object">A param.</param>
    /// </signature>
  }



  cls.setImageFileAsync = function setImageFileAsync(value, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="value" type="Object">A param.</param>
    /// </signature>
  }



  cls.setImageStreamAsync = function setImageStreamAsync(value, callback) {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <param name="value" type="Object">A param.</param>
    /// </signature>
  }



  cls.tryRemoveImageFeed = function tryRemoveImageFeed() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="Boolean" />
    /// </signature>
    return new Boolean();
  }


  cls.getImageStream = function getImageStream() {
    /// <signature>
    /// <summary>Function summary.</summary>
    /// <returns type="Object" />
    /// </signature>
    return new Object();
  }


  cls.originalImageFile = new Object();
  return cls;
}) ();
exports.LockScreen = LockScreen;

